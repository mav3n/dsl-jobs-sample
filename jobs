job('job_dsl_example'){

    description('This is an example job created using DSL')

    parameters{
        stringParam('Param1', defaultValue='One', description='This is first parameter')
        choiceParam('Param2', ['Option 1', 'Option 2'])
	booleanParam('FLAG', true)
    }
  
    scm {
        git('https://github.com/mav3n/simple-java-maven-app', 'master')
    }
  
    // triggers {
    //    cron('H 5 * * 7')
    // }
  
    steps {
        shell("echo 'Hello World'")
      	shell("echo 'Running Job'")
    }
  
    publishers {
        mailer('jenkins-test@mailinator.com', true, true)
    }
  
}

job('ansible-users-db-dsl') {

    description('This updates the User Table (on jenkins.local:80) with the specified age')

    parameters {
        choiceParam('AGE', ['20', '21', '22','23','24','25', '26','27','28','29','30','31','32','33','34','35'])
    }

    wrappers {
        colorizeOutput(colorMap = 'xterm')
    }

    steps {
        ansiblePlaybook('/var/jenkins_home/ansible/people.yml') {
            inventoryPath('/var/jenkins_home/ansible/hosts')
            colorizedOutput(true)
            extraVars {
                extraVar("PEOPLE_AGE", '${AGE}', false)
            }
        }
    }
}

job('maven_job_dsl') {

    description('Maven DSL Job')

    scm {
        git('https://github.com/mav3n/simple-java-maven-app.git', 'master', {node -> node / 'extensions' << '' })
    }

    triggers {
        githubPush()
    }
  
    steps {
        maven {
            mavenInstallation('jenkins-maven')
            goals('-B -DskipTests clean package')
        }
        maven {
            mavenInstallation('jenkins-maven')
            goals('test')
        }
        shell('''
            echo ************RUNNING THE JAR************************
            java -jar /var/jenkins_home/workspace/maven_job_dsl/target/my-app-1.0-SNAPSHOT.jar
        ''')
    }

    publishers {
        archiveArtifacts('target/*.jar')
        archiveJunit('target/surefire-reports/*.xml')
        mailer('jenkins-test@mailinator.com', true, true)
    }
}
